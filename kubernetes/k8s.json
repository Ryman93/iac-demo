{
  "meta": {
    "isPrivate": true,
    "isLicensesEnabled": false,
    "policy": "",
    "ignoreSettings": null,
    "projectId": "",
    "org": "ben.laplanche"
  },
  "filesystemPolicy": false,
  "vulnerabilities": [],
  "dependencyCount": 0,
  "licensesPolicy": null,
  "ignoreSettings": null,
  "targetFile": "deployment.yaml",
  "projectName": "kubernetes",
  "org": "ben.laplanche",
  "policy": "",
  "isPrivate": true,
  "packageManager": "k8sconfig",
  "path": "deployment.yaml",
  "projectType": "k8sconfig",
  "infrastructureAsCodeIssues": [
    {
      "id": "SNYK-CC-K8S-4",
      "title": "Container is running without memory limit",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value"
      },
      "lineNumber": 17,
      "path": [
        "[DocId: 0]",
        "input",
        "spec",
        "template",
        "spec",
        "containers[snykcon-2020]",
        "resources",
        "limits",
        "memory"
      ]
    },
    {
      "id": "SNYK-CC-K8S-5",
      "title": "Container is running without cpu limit",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "CPU limit is not defined",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
      },
      "lineNumber": 17,
      "path": [
        "[DocId: 0]",
        "input",
        "spec",
        "template",
        "spec",
        "containers[snykcon-2020]",
        "resources",
        "limits",
        "cpu"
      ]
    },
    {
      "id": "SNYK-CC-K8S-6",
      "title": "Container is running with default set of capabilities",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "medium",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list"
      },
      "lineNumber": 17,
      "path": [
        "[DocId: 0]",
        "input",
        "spec",
        "template",
        "spec",
        "containers[snykcon-2020]",
        "securityContext",
        "capabilities",
        "drop"
      ]
    },
    {
      "id": "SNYK-CC-K8S-8",
      "title": "Container is running with writable root filesystem",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
      },
      "lineNumber": 17,
      "path": [
        "[DocId: 0]",
        "input",
        "spec",
        "template",
        "spec",
        "containers[snykcon-2020]",
        "securityContext",
        "readOnlyRootFilesystem"
      ]
    },
    {
      "id": "SNYK-CC-K8S-10",
      "title": "Container is running without root user control",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "medium",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Container is running without root user control",
        "impact": "Container could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`"
      },
      "lineNumber": 17,
      "path": [
        "[DocId: 0]",
        "input",
        "spec",
        "template",
        "spec",
        "containers[snykcon-2020]",
        "securityContext",
        "runAsNonRoot"
      ]
    },
    {
      "id": "SNYK-CC-K8S-32",
      "title": "Container is running without AppArmor profile",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "The AppArmor profile is not set correctly",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
      },
      "lineNumber": 4,
      "path": [
        "[DocId: 0]",
        "metadata",
        "annotations['container.apparmor.security.beta.kubernetes.io/snykcon-2020']"
      ]
    },
    {
      "id": "SNYK-CC-K8S-41",
      "title": "Container is running without liveness probe",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute"
      },
      "lineNumber": 17,
      "path": [
        "[DocId: 0]",
        "spec",
        "template",
        "spec",
        "containers[snykcon-2020]",
        "livenessProbe"
      ]
    },
    {
      "id": "SNYK-CC-K8S-42",
      "title": "Container could be running with outdated image",
      "type": "k8s",
      "subType": "Deployment",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`"
      },
      "lineNumber": 17,
      "path": [
        "[DocId: 0]",
        "spec",
        "template",
        "spec",
        "containers[snykcon-2020]",
        "imagePullPolicy"
      ]
    }
  ]
}
